@page "/"

<PageTitle>William Sullivan - Software Developer</PageTitle>

<MainLayoutSetter Links="@Links">
	<Hero>
		<div class="hero-buffer">
			<MudText Typo="Typo.h4" Class="hero-font">
				Hi! I'm <strong>William Sullivan</strong>
			</MudText>
			<MudText Typo="Typo.body1" Class="hero-font">
				I'm a <strong>software developer</strong>
			</MudText>
			<MudText Typo="Typo.body2" Class="hero-font">
				This website is <strong>under construction</strong>.
			</MudText>
		</div>
	</Hero>
</MainLayoutSetter>

<div class="pt-8 pt-lg-12 rounded-t-xl" style="background-color: @(GetColor(true));" />
<MudContainer MaxWidth="MaxWidth.False" Class="mx-0 px-0 py-xl-16">
	<About Id="about" BackgroundColor="@GetColor(true)" />
	<WorkExperience Id="workExperience" BackgroundColor="@GetColor(false)" />
	<Projects Id="projects" BackgroundColor="@GetColor(true)" />
	<Contact Id="contact" BackgroundColor="@GetColor(false)" />
</MudContainer>
<div class="pb-8 pb-lg-12" style="background-color: @(GetColor(false));" />

@code {
	[CascadingParameter]
	protected MudThemeProvider? MudThemeProvider { get; set; }

	private List<LinkDetails>? Links { get; } = new() {
		new("#", "Home"),
		new("#about", "About"),
		new("#workExperience", "Experience"),
		new("#projects", "Projects"),
		new("#contact", "Contact") };

	string GetColor(bool even)
	{
		if (MudThemeProvider?.IsDarkMode ?? false)
		{
			var paletteDark = MudThemeProvider.Theme?.PaletteDark ?? new PaletteDark();
			return even ? paletteDark.GrayLighter : paletteDark.GrayLight;
		}
		else
		{
			return even ? Colors.Grey.Lighten5 : Colors.Grey.Lighten4;
		}
	}
}

