<div class="grid" grid-left=@ImageLeftString>
	<MudLink Href="@($"Projects/{SubPage}")" Underline="Underline.None" Class="image-container" image-container-left=@ImageLeftString>
		<MudPaper Class="pa-0 pt-md-5 px-md-5 overflow-y-hidden width-100 image-paper" Style=@PaperHeightStyle Square=@ImageTextHidden>
			<MudStack AlignItems="AlignItems.Center" Spacing="2">
				<MudHidden Breakpoint="Breakpoint.SmAndDown" @bind-IsHidden=ImageTextHidden>
					<MudText Style="width: calc(80% + 32px)" Typo="Typo.h4" Color="Color.Primary" Class="mono-font" Align="Align.Center"><strong>@Title</strong></MudText>
					<MudText Style="width: calc(80% + 32px)" Typo="Typo.body1" Class="mud-text-secondary mono-font" Align="Align.Center"><i>@Catchline</i></MudText>
				</MudHidden>
				<MudImage Class="mt-md-3" Style="width: 100%" Src=@ImageSource Alt=@ImageAltText Elevation="1" />
			</MudStack>
		</MudPaper>
	</MudLink>

	<MudLink Href="@($"Projects/{SubPage}")" Underline="Underline.None" Class="content-container mt-n1 mt-md-0 z-10" content-container-left=@ImageLeftString>
		<BigMudPaper Id="@Id" Elevation="2">
			<ResponsiveSubTitle>
				<MainContent>
					<strong>@Title</strong>
				</MainContent>
			</ResponsiveSubTitle>

			<MudText>
				<i>@ChildContent</i>
			</MudText>

			<MudStack Row=true Spacing="1" AlignItems="AlignItems.End">
				@if (Tags != null)
				{
					<MudChipSet Row=true Spacing="2" Class="ma-2">
						@foreach (var tag in Tags)
						{
							<SmallMudChipTag>@tag</SmallMudChipTag>
						}
					</MudChipSet>
				}
				<MudSpacer />
				@if (!string.IsNullOrEmpty(GitHub))
				{
					<MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Secondary" aria-label="GitHub" Href=@GitHub Target="_blank" />
				}
				<MudIconButton Icon="@Icons.Material.Filled.ReadMore" Color="Color.Secondary"><b>Read More</b></MudIconButton>
			</MudStack>
		</BigMudPaper>
	</MudLink>
</div>

@code {
	[Parameter]
	public string? Id { get; set; }

	[Parameter]
	public string? Title { get; set; }
	[Parameter]
	public string? Catchline { get; set; }
	[Parameter]
	public RenderFragment? ChildContent { get; set; }
	[Parameter]
	public List<string>? Tags { get; set; }

	[Parameter]
	public string? SubPage { get; set; }
	[Parameter]
	public string? GitHub { get; set; }

	[Parameter]
	public string? Date { get; set; }

	[Parameter]
	public bool ImageLeft { get; set; } = false;
	private string ImageLeftString => ImageLeft.ToString();

	[Parameter]
	public string ImageSource { get; set; } = "images/PlaceholderProject.png";
	[Parameter]
	public string ImageAltText { get; set; } = "Placeholder Project Picture";

	[Parameter]
	public int ImageLargeHeight { get; set; } = 400;
	[Parameter]
	public int ImageSmallHeight { get; set; } = 100;

	private bool ImageTextHidden { get; set; }

	private string PaperHeightStyle => $"--paper-height:{(ImageTextHidden ? ImageSmallHeight : ImageLargeHeight)}px;";
}

